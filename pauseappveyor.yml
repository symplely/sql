build: false
platform:
  - x64
clone_folder: c:\projects\php-project-workspace

## Build matrix for lowest and highest possible targets
environment:
  matrix:
  - php_ver_target: 7.3.11
  MYSQL_DATABASE: ez_test
  MYSQL_HOST: localhost
  MYSQL_USER: root
  MYSQL_PASSWORD: Password12!
  MYSQL_PATH: C:\Program Files\MySQL\MySQL Server 5.7

services:
    - mssql2014
    - mysql
    - postgresql

## Set up environment variables
init:
    - SET COMPOSER_NO_INTERACTION=1
    - SET PHP=1 # This var is connected to PHP install cache
    - SET ANSICON=121x90 (121x90)

## Install PHP and composer, and run the appropriate composer command Get the MSSQL DLL's and XDEBUG
install:
    # Enable Windows Update service, needed to install vcredist2015 (dependency of php)
    - IF EXIST c:\tools\php73 (SET PHP=0)
    - ps: Set-Service wuauserv -StartupType Manual
    - choco config set cacheLocation %LOCALAPPDATA%\Temp\Chocolatey
    - choco install -y php --version %php_ver_target%
    - choco install -y sqlite
    - choco install -y composer
    - refreshenv
    - composer install --no-interaction --no-progress --prefer-dist
    - cd C:\tools\php73
    # Get the MSSQL DLL's
    - ps: >-
        If ($env:PHP -eq "1") {
            $DLLVersion = "5.6.1"
            cd C:\tools\php73\ext
            $source = "http://windows.php.net/downloads/pecl/releases/sqlsrv/$($DLLVersion)/php_sqlsrv-$($DLLVersion)-7.3-nts-vc15-x64.zip"
            $destination = "C:\tools\php73\ext\php_sqlsrv-$($DLLVersion)-7.3-nts-vc15-x64.zip"
            Invoke-WebRequest $source -OutFile $destination
            7z x -y php_sqlsrv-$($DLLVersion)-7.3-nts-vc15-x64.zip > $null
            $source = "http://windows.php.net/downloads/pecl/releases/pdo_sqlsrv/$($DLLVersion)/php_pdo_sqlsrv-$($DLLVersion)-7.3-nts-vc15-x64.zip"
            $destination = "C:\tools\php73\ext\php_pdo_sqlsrv-$($DLLVersion)-7.3-nts-vc15-x64.zip"
            Invoke-WebRequest $source -OutFile $destination
            7z x -y php_pdo_sqlsrv-$($DLLVersion)-7.3-nts-vc15-x64.zip > $null
            Remove-Item C:\tools\php73\ext* -include .zip
            Invoke-WebRequest "https://xdebug.org/files/php_xdebug-2.7.2-7.3-vc15-nts-x86_64.dll" -OutFile "C:\tools\php73\ext\php_xdebug-2.7.2-7.3-vc15-nts-x86_64.dll"
            cd C:\tools\php73
        }
    - IF %PHP%==1 echo date.timezone="UTC" >> php.ini
    - IF %PHP%==1 echo extension_dir=ext >> php.ini
    - IF %PHP%==1 echo extension=php_fileinfo.dll >> php.ini
    - ps: >-
        If ($env:php_ver_target -eq "5.6") {
          Add-Content php.ini "`nextension=php_sqlsrv_nts.dll"
          Add-Content php.ini "`nextension=php_pdo_sqlsrv_nts.dll"
          Add-Content php.ini "`n"
        } Else {
          Add-Content php.ini "`nextension=php_sqlsrv.dll"
          Add-Content php.ini "`nextension=php_pdo_sqlsrv.dll"
          Add-Content php.ini "`n"
        }
    - IF %PHP%==1 echo extension=php_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_pgsql.dll >> php.ini
    - IF %PHP%==1 echo extension=php_sqlite3.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_sqlite.dll >> php.ini
    - IF %PHP%==1 echo extension=php_mysqli.dll >> php.ini
    - IF %PHP%==1 echo extension=php_pdo_mysql.dll >> php.ini
    - IF %PHP%==1 echo [xdebug] >> php.ini
    - IF %PHP%==1 echo zend_extension=php_xdebug-2.7.2-7.3-vc15-nts-x86_64.dll >> php.ini
    - IF %PHP%==1 echo zend.assertions=1 >> php.ini
    - IF %PHP%==1 echo assert.exception=On >> php.ini
    - IF %PHP%==1 echo xdebug.remote_enable=1 >> php.ini
    - IF %PHP%==1 echo xdebug.remote_autostart=1 >> php.ini
    - IF %PHP%==1 echo xdebug.profiler_enable=off >> php.ini
    - cd c:\projects\php-project-workspace
    - composer self-update
    - composer require phpstan/phpstan "0.11.3"

build_script:
  # postgres
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - PATH=C:\Program Files\PostgreSQL\9.6\bin\;%PATH%
  - createdb ez_test
  - psql -c "CREATE USER ez_test WITH PASSWORD 'ezTest';"
  # sqlserver
  - sqlcmd -S localhost,1433 -U sa -P Password12! -Q "CREATE DATABASE ez_test"
  - sqlcmd -S localhost,1433 -U sa -P Password12! -d ez_test -Q "CREATE LOGIN ez_test WITH PASSWORD=N'ezTest', DEFAULT_DATABASE=ez_test, CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF; ALTER SERVER ROLE [sysadmin] ADD MEMBER ez_test"

before_test:
  - SET PATH=%MYSQL_PATH%\bin;%PATH%
  - mysqladmin --host=%MYSQL_HOST% --user=%MYSQL_USER% --password=%MYSQL_PASSWORD% create %MYSQL_DATABASE%
  # mysql
  - mysql -u root -p"Password12!" -e "CREATE DATABASE IF NOT EXISTS ez_test;"
  - mysql -u root -p"Password12!" -e "GRANT ALL PRIVILEGES ON ez_test.* TO ez_test@localhost IDENTIFIED BY 'ezTest'";
  - mysql -u root -p"Password12!" -e "FLUSH PRIVILEGES;"

on_success:
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "coverage.xml"

## Run the actual test
test_script:
    - cd c:\projects\php-project-workspace
    - vendor\bin\phpunit --coverage-clover=coverage.xml
